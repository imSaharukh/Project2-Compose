version: "3.8"

# Dockerized CI environment: Jenkins + Docker-in-Docker (DinD)
# DinD runs the Docker daemon; Jenkins talks to it over TLS (remote Docker host pattern).
# Volumes persist Jenkins data and Docker image layers between restarts.

# version is obsolete in Compose v2+ and omitted on purpose

volumes:
  jenkins-data: {}          # persistent Jenkins home (/var/jenkins_home)
  docker-certs-ca: {}       # CA certs generated by DinD
  docker-certs-client: {}   # client certs used by Jenkins to auth to DinD
  dind-data: {}             # Docker daemon image/layer cache on DinD

networks:
  jenkins: {}

services:
  dind:
    image: docker:27-dind
    privileged: true               # required for DinD to run dockerd
    environment:
      DOCKER_TLS_CERTDIR: /certs   # enable TLS and place certs under /certs
    networks:
      jenkins:
        aliases:
          - docker                 # Jenkins reaches DinD via host "docker"
    volumes:
      - docker-certs-ca:/certs/ca          # CA certs
      - docker-certs-client:/certs/client  # client certs for Jenkins
      - dind-data:/var/lib/docker          # persist image cache
    healthcheck:
      test: ["CMD-SHELL", "docker info >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 8

  jenkins:
    build:
      context: ./jenkins            # your Dockerfile for Jenkins lives here
    user: root                      # allows installing tools/plugins at startup
    environment:
      # Talk to DinD securely over TLS
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"
      # Seed Jenkins via Configuration as Code (CASC)
      # CASC_JENKINS_CONFIG: /var/jenkins_home/casc.yaml
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      CASC_LOG_LEVEL: "FINE"
      CASC_DEBUG: "true"
    networks:
      - jenkins
    ports:
      - "8080:8080"                 # Jenkins UI
      - "50000:50000"               # JNLP agents (if used)
    volumes:
      - jenkins-data:/var/jenkins_home    # Jenkins state
      - docker-certs-client:/certs/client:ro  # client certs (read-only)
    depends_on:
      dind:
        condition: service_healthy
    restart: unless-stopped